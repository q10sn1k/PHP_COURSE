<?php

// абстрактный класс банковского счета

abstract class BankAccount {
    protected float $balance;
    protected string $ownerName;

    public function __construct(string $ownerName, float $balance = 0) {
        $this->balance = $balance;
        $this->ownerName = $ownerName;
    }

    public function getBalance(): float {
        return $this->balance;
    }

    public function deposit(float $amount) {
        $this->balance += $amount;
    }

    abstract public function witdraw(float $amount);
}

// Класс для  счета

class CheckingAccount extends BankAccount {
    // коммисия
    private float $fee;

    public function __construct(string $ownerName, float $balance = 0, float $fee = 0) {
        parent::__construct($ownerName, $balance);
        $this->fee = $fee;
    }

    public function witdraw($amount) {
        // TODO: Change the autogenerated stub
        $this->balance -= $amount + $this->fee;
    }

    public function getFee(): float {
        return $this->fee;
    }

    public function setFee(float $fee) {
        $this->fee = $fee;
    }

    public function getInfo(): string {
        return "Счет: {$this->ownerName}<br>" .
            "Баланс: {$this->balance} рублей " .
            "Коммисия: {$this->fee}";
    }

}

$checking = new CheckingAccount("Иван Сергеев", 1000,10);
echo $checking->getInfo() . '<br>';

$checking->witdraw(100);
echo $checking->getInfo() . '<br>';

$checking->setFee(15);
echo $checking->getInfo() . '<br>';
