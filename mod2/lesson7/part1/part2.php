<?php
    // массивы и цикл foreach

    $arr = [1, 2, 3, 4, 5, 6];

    // распечатаем каждый элемент массива по отдельности с переносом строки

    foreach ($arr as $item){
        //echo $item . '<br>';
    }

    /*
        1
        2
        3
        4
        5
        6
     */

    $arr2 = [
        'элемент',
        'еще 1 элемент',
        'и еще 1 элемент'
    ];

    foreach ($arr2 as $item){
        //echo $item . '<br>';
    }

    /*
        элемент
        еще 1 элемент
        и еще 1 элемент
     */


    $arr3 = [
        1,
        'elem',
        [1 ,2 ,3 ,5, 10],
        'next elem',
        [
            [1 ,2 ,3 ,5, 10],
            'next elem',
            [
                'str',
                'elem',
                [
                    1,
                    [1, 5, '=-)'],
                    'text'
                ]
            ]
        ]
    ];
    //echo $arr3[2][1]; // 2
    //echo $arr3[4][2][0]; // str

    /*
        из массива
    $arr3 = [
        1,
        'elem',
        [1 ,2 ,3 ,5, 10],
        'next elem',
        [
            [1 ,2 ,3 ,5, 10],
            'next elem',
            [
                'str',
                'elem',
                [
                    1,
                    [1, 5, '=-)'],
                    'text'
                ]
            ]
        ]
    ];

    выведем элемент
    '=-)'
    Если у нас не указаны ключи явно, то тогда (нумерация эллементов) ключи идут с нуля
    найдем где хранится нужный для нас элемент

     $arr3 = [
        0 => 1,
        1 => 'elem',
        2 => [1 ,2 ,3 ,5, 10],
        3 => 'next elem',
        4 => [
            [1 ,2 ,3 ,5, 10],
            'next elem',
            [
                'str',
                'elem',
                [
                    1,
                    [1, 5, '=-)'],
                    'text'
                ]
            ]
        ]
    ];

    нужный нам элемент находится в 4-м ключе, поэтому при выводе укажем его индекс

    echo $arr3[4]

    далее рссматриваем массив $arr3[4] так как он содержит сложную структуру ищем
    индекс элемента который нам нужен


    4 => [
            0 => [1 ,2 ,3 ,5, 10],
            1 => 'next elem',
            2 => [
                    'str',
                    'elem',
                    [
                        1,
                        [1, 5, '=-)'],
                        'text'
                    ]
             ]
        ]

    нужный нам элемент содержится во 2-м ключе массива $arr3[4],

    echo $arr3[4][2]

    далее рссматриваем массив $arr3[4][2]  так как он содержит сложную структуру ищем
    индекс элемента который нам нужен

              [
                   0 => 'str',
                   1 => 'elem',
                   2 => [
                            1,
                            [1, 5, '=-)'],
                            'text'
                        ]
             ]


    нужный нам элемент содержится во 2-м ключе массива $arr3[4][2] ,

    echo $arr3[4][2][2]

    далее рссматриваем массив $arr3[4][2][2] так как он содержит сложную структуру ищем
    индекс элемента который нам нужен

    [
        0 => 1,
        1 => [1, 5, '=-)'],
        2 => 'text'
    ]

    нужный нам элемент содержится во 1-м ключе массива $arr3[4][2][2],

    echo $arr3[4][2][2][1]

    далее рссматриваем массив $arr3[4][2][2][1] так как он содержит сложную структуру ищем
    индекс элемента который нам нужен

    [0 => 1, 1=> 5, 2 => '=-)']

    нужный нам элемент находися во 2 ключе массива $arr3[4][2][2][1]

    выведем его

    $arr3[4][2][2][1][2] // =-)
     */

    //echo $arr3[4][2][2][1][2]; // =-)

    $arr4 = [
        1,
        [
            1,
            3,
            ['строка', 2, 5]
        ],
        8
    ];

    // выведем элемент - строка

    echo $arr4[1][2][0];


    // __________________________________________________________________
    echo '<br>';
    function test($a, $b){
        if ($a == $b){
            $res = "$a и $b равны";
            return $res;
        } else {
            $res = "$a и $b не равны";
            return $res;
        }
    }

    // протестируем нашу функцию

    $res1 = test(2,2);
    $res2 = test(2,7);
    echo "$res1 ............. $res2";
    // 2 и 2 равны ............. 2 и 7 не равны