<?php
    // получим количество элементов в массиве

    $arr = ['q', 'w', 'e' , ' ', '/', 'Ё', 'r'];
    $i = 0;
    foreach ($arr as $item) {
        $i++;
    }
    // вывод результата
    //echo $i;

    //_____________________________________________________ найдем домены, доменные имена (1 карман), доменные зоны (2 карман)

    $pattern = '#([a-z0-9_-]+)\.([a-z]{2,})#';
    $subject = 'site.ru site.com site123.net';
    $res = preg_match_all($pattern, $subject, $matches);
    //print_r($matches);
    /*
        [
            ['site.ru', 'site.com', 'site123.net'] // массив совпадений с регулярным выражением
            ['site', 'site', 'site123'] // массив совпадений с 1-м карманом регулярного выражения
            ['ru', 'com', 'net'] // массив совпадений со 2-м карманом регулярного выражения
        ]
     */

    //print_r($matches[2]);

    // посчитаем количество элементов в массиве.
    // для этого введем счетчик $i и присвоим ему значение 0.
    // будем использовать цикл foreach и во время каждой итерации цикла увеличивать значение счетчика на единицу

    $i=0;
    foreach ($matches[2] as $item) {
        //echo $item . '<br>';
        $i++;
    }
    // выведем значение нашего счетчика
    //echo $i; // 3

    // функция нахождения площади прямоугольника

    /*
        функция объявляется с помощью ключевого слова function

        далее указывается название функции

        далее в круглых скробках указываются аргументы функции, которые в дальнейшем будут использоваться
     */

    function S($a, $b) {
        $s = $a * $b;
        // возвращаем значение функции
        return $s;
    }
    // тестируем нашу функцию.
    //echo S(2,4);
//_________________________________________________________________________________________________________________
    // создадим функцию которая будет искать слова из 5 букв, в результате получим количество таких слов

    function word_5_items($subject) {
        $pattern = '#[a-zA-Zа-яА-ЯёЁ_-]{5}#u'; // составим регулярное выражение в соответствие с условием задачи
        $res = preg_match_all($pattern, $subject, $matchesF);
        /* $matchesF - многомерный массив в котором находятся результаты совпадений */

        /*
         Поскольку массив $matchesF это многомерный массив:
            [
                ['asdfg', 'asdgh', 'qrtyu', 'фывап', 'фывап']
            ]
             return $matchesF;
         А наш результирующий массив находится в многомерном массиве, то обратимся к результирующему массиву
        (по условию задачи) $matchesF[0].
            return $matchesF[0];
            // ['asdfg', 'asdgh', 'qrtyu', 'фывап', 'фывап']

           ________________________________________________________
        По скольку явно не указаны ключи массивов, то нумерация ключей начинается с нуля (0)

        То есть
            [
                ['asdfg', 'asdgh', 'qrtyu', 'фывап', 'фывап']
            ]
        эквивалентно

            [
                0 => ['asdfg', 'asdgh', 'qrtyu', 'фывап', 'фывап']
            ]
        */

        // объявим счетчик и присвоим ему значение 0
        $i = 0;

        /*
            для того чтобы посчитать количество элементов массива в цикле foreach будем
            во время каждой итерации цикла увеличивать значение на единицу
         */
        foreach ($matchesF[0] as $item) {
            $i++; // $i = $i + 1
        }

        // вернем значение нашего счетчика
        return $i;
    }

    /*
        протестируем нашу функцию, для этого создадим произвольную строку $subject
     */
    $subject = 'asdfg asdgh 0efr02 qrtyu 08yеё34 фывап фывап';

    // print_r(word_5_items($subject));
    // объявим переменную $res и вызовем нашу функцию word_5_items, а также передадим аргумент функции строку ($subject)
    $res = word_5_items($subject);

    // выведем результат
    echo $res; //5


